JavaGrinder - A Java to C++ Translator, v. 2.1.1, Ariel Bendon, Christopher Lee, Daniel Uebelein, Justin Bernegger, & Steven Socha
Processing /home/tev/workspace/Java_Grinder/src/xtc/oop/Test.java ...
CompilationUnit(
  PackageDeclaration(
    null,
    QualifiedIdentifier(
      "xtc",
      "oop"
    )
  ),
  ClassDeclaration(
    Modifiers(
      Modifier(
        "public"
      )
    ),
    "Test",
    null,
    null,
    null,
    ClassBody(
      FieldDeclaration(
        Modifiers(
          Modifier(
            "public"
          ),
          Modifier(
            "static"
          ),
          Modifier(
            "final"
          )
        ),
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        Declarators(
          Declarator(
            "R1",
            null,
            NewClassExpression(
              null,
              null,
              QualifiedIdentifier(
                "Object"
              ),
              Arguments(),
              null
            )
          )
        )
      ),
      FieldDeclaration(
        Modifiers(
          Modifier(
            "public"
          ),
          Modifier(
            "static"
          ),
          Modifier(
            "final"
          )
        ),
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        Declarators(
          Declarator(
            "R2",
            null,
            NewClassExpression(
              null,
              null,
              QualifiedIdentifier(
                "Object"
              ),
              Arguments(),
              null
            )
          )
        )
      ),
      FieldDeclaration(
        Modifiers(
          Modifier(
            "public"
          ),
          Modifier(
            "static"
          ),
          Modifier(
            "final"
          )
        ),
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        Declarators(
          Declarator(
            "R3",
            null,
            NewClassExpression(
              null,
              null,
              QualifiedIdentifier(
                "Object"
              ),
              Arguments(),
              null
            )
          )
        )
      ),
      FieldDeclaration(
        Modifiers(
          Modifier(
            "public"
          ),
          Modifier(
            "static"
          ),
          Modifier(
            "final"
          )
        ),
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        Declarators(
          Declarator(
            "R4",
            null,
            NewClassExpression(
              null,
              null,
              QualifiedIdentifier(
                "Object"
              ),
              Arguments(),
              null
            )
          )
        )
      ),
      FieldDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        Type(
          PrimitiveType(
            "int"
          ),
          null
        ),
        Declarators(
          Declarator(
            "count",
            null,
            null
          )
        )
      ),
      ConstructorDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        "Test",
        FormalParameters(),
        null,
        Block(
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "count"
              ),
              "=",
              IntegerLiteral(
                "0"
              )
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m1",
        FormalParameters(),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "R1"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          ),
          Modifier(
            "static"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m2",
        FormalParameters(),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "R3"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Test"
          ),
          null
        ),
        "m3",
        FormalParameters(),
        null,
        null,
        Block(
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "count"
              ),
              "++"
            )
          ),
          ReturnStatement(
            ThisExpression(
              null
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Test"
          ),
          null
        ),
        "m4",
        FormalParameters(),
        null,
        null,
        Block(
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "count"
              ),
              "++"
            )
          ),
          ReturnStatement(
            ThisExpression(
              null
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Test"
          ),
          null
        ),
        "m5",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Test"
              ),
              null
            ),
            null,
            "t",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            CallExpression(
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m3",
                Arguments()
              ),
              null,
              "m4",
              Arguments()
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m6",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Test"
              ),
              null
            ),
            null,
            "t",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "R1"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m6",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Rest"
              ),
              null
            ),
            null,
            "r",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "R2"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m7",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Object"
              ),
              null
            ),
            null,
            "o",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "R3"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m7",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            null,
            "s",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "R4"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m7",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Test"
              ),
              null
            ),
            null,
            "t",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "R1"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m7",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Rest"
              ),
              null
            ),
            null,
            "r",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "R2"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m8",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Test"
              ),
              null
            ),
            null,
            "t",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "R1"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m8",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Rest"
              ),
              null
            ),
            null,
            "r",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "R2"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m8",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Test"
              ),
              null
            ),
            null,
            "t1",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Test"
              ),
              null
            ),
            null,
            "t2",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "R3"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m8",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Rest"
              ),
              null
            ),
            null,
            "r",
            null
          ),
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Test"
              ),
              null
            ),
            null,
            "t",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            PrimaryIdentifier(
              "R4"
            )
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m9",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              PrimitiveType(
                "short"
              ),
              null
            ),
            null,
            "n1",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            NullLiteral()
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m9",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            null,
            "n1",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            NullLiteral()
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m9",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              PrimitiveType(
                "long"
              ),
              null
            ),
            null,
            "n1",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            NullLiteral()
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m10",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            null,
            "n1",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            NullLiteral()
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          )
        ),
        null,
        Type(
          QualifiedIdentifier(
            "Object"
          ),
          null
        ),
        "m10",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              PrimitiveType(
                "long"
              ),
              null
            ),
            null,
            "n1",
            null
          )
        ),
        null,
        null,
        Block(
          ReturnStatement(
            NullLiteral()
          )
        )
      ),
      MethodDeclaration(
        Modifiers(
          Modifier(
            "public"
          ),
          Modifier(
            "static"
          )
        ),
        null,
        VoidType(),
        "main",
        FormalParameters(
          FormalParameter(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              Dimensions(
                "["
              )
            ),
            null,
            "args",
            null
          )
        ),
        null,
        null,
        Block(
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "short"
              ),
              null
            ),
            Declarators(
              Declarator(
                "n",
                null,
                IntegerLiteral(
                  "1"
                )
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Test"
              ),
              null
            ),
            Declarators(
              Declarator(
                "t",
                null,
                null
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Rest"
              ),
              null
            ),
            Declarators(
              Declarator(
                "r",
                null,
                null
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Object"
              ),
              null
            ),
            Declarators(
              Declarator(
                "o",
                null,
                NullLiteral()
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            Declarators(
              Declarator(
                "test",
                null,
                IntegerLiteral(
                  "0"
                )
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            Declarators(
              Declarator(
                "success",
                null,
                IntegerLiteral(
                  "0"
                )
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "System"
                ),
                "out"
              ),
              null,
              "println",
              Arguments(
                StringLiteral(
                  "\"PASS Test.main()\""
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "success"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            LogicalAndExpression(
              LogicalAndExpression(
                LogicalAndExpression(
                  EqualityExpression(
                    PrimaryIdentifier(
                      "R1"
                    ),
                    "!=",
                    NullLiteral()
                  ),
                  EqualityExpression(
                    PrimaryIdentifier(
                      "R1"
                    ),
                    "!=",
                    PrimaryIdentifier(
                      "R2"
                    )
                  )
                ),
                EqualityExpression(
                  PrimaryIdentifier(
                    "R1"
                  ),
                  "!=",
                  PrimaryIdentifier(
                    "R3"
                  )
                )
              ),
              EqualityExpression(
                PrimaryIdentifier(
                  "R1"
                ),
                "!=",
                PrimaryIdentifier(
                  "R4"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS Object.<init>()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL Object.<init>()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "r"
              ),
              "=",
              NewClassExpression(
                null,
                null,
                QualifiedIdentifier(
                  "Rest"
                ),
                Arguments(),
                null
              )
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m1",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R2"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m1()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m1()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "t"
              ),
              "=",
              PrimaryIdentifier(
                "r"
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "t"
              ),
              "==",
              PrimaryIdentifier(
                "r"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t == r\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t == r\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "t"
              ),
              null,
              "equals",
              Arguments(
                PrimaryIdentifier(
                  "r"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.equals(r)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.equals(r)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "r"
              ),
              null,
              "equals",
              Arguments(
                PrimaryIdentifier(
                  "t"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.equals(t)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.equals(t)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "int"
              ),
              null
            ),
            Declarators(
              Declarator(
                "h",
                null,
                CallExpression(
                  PrimaryIdentifier(
                    "r"
                  ),
                  null,
                  "hashCode",
                  Arguments()
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              IntegerLiteral(
                "7353"
              ),
              "==",
              PrimaryIdentifier(
                "h"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS 7353 == r.hashCode()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL 7353 == r.hashCode()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            Declarators(
              Declarator(
                "s1",
                null,
                CallExpression(
                  PrimaryIdentifier(
                    "t"
                  ),
                  null,
                  "toString",
                  Arguments()
                )
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "String"
              ),
              null
            ),
            Declarators(
              Declarator(
                "s2",
                null,
                CallExpression(
                  PrimaryIdentifier(
                    "r"
                  ),
                  null,
                  "toString",
                  Arguments()
                )
              )
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "s1"
              ),
              null,
              "equals",
              Arguments(
                PrimaryIdentifier(
                  "s2"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.toString().equals(r.toString())\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.toString().equals(r.toString())\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m1",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R2"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m1()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m1()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "Rest"
                ),
                null,
                "m2",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R4"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS Rest.m2()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL Rest.m2()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m2",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R4"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m2()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m2()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Test"
              ),
              null
            ),
            Declarators(
              Declarator(
                "tr",
                null,
                PrimaryIdentifier(
                  "r"
                )
              )
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "tr"
                ),
                null,
                "m2",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R3"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS tr.m2()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL tr.m2()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "Test"
                ),
                null,
                "m2",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R3"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS Test.m2()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL Test.m2()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m2",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R3"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m2()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m2()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "t"
              ),
              "=",
              NewClassExpression(
                null,
                null,
                QualifiedIdentifier(
                  "Test"
                ),
                Arguments(),
                null
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "t"
              ),
              "!=",
              PrimaryIdentifier(
                "r"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t != r\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t != r\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            LogicalNegationExpression(
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "equals",
                Arguments(
                  PrimaryIdentifier(
                    "r"
                  )
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS ! t.equals(r)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL ! t.equals(r)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "s1"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "toString",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            LogicalNegationExpression(
              CallExpression(
                PrimaryIdentifier(
                  "s1"
                ),
                null,
                "equals",
                Arguments(
                  PrimaryIdentifier(
                    "s2"
                  )
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS ! t.toString().equals(r.toString())\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL ! t.toString().equals(r.toString())\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m1",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R1"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m1()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m1()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              PrimaryIdentifier(
                "t"
              )
            )
          ),
          ConditionalStatement(
            InstanceOfExpression(
              PrimaryIdentifier(
                "o"
              ),
              Type(
                QualifiedIdentifier(
                  "Test"
                ),
                null
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS o instanceof Test\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL o instanceof Test\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            InstanceOfExpression(
              PrimaryIdentifier(
                "o"
              ),
              Type(
                QualifiedIdentifier(
                  "Object"
                ),
                null
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS o instanceof Object\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL o instanceof Object\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            LogicalNegationExpression(
              InstanceOfExpression(
                PrimaryIdentifier(
                  "o"
                ),
                Type(
                  QualifiedIdentifier(
                    "String"
                  ),
                  null
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS ! (o instanceof String)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL ! (o instanceof String)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                CastExpression(
                  Type(
                    QualifiedIdentifier(
                      "Test"
                    ),
                    null
                  ),
                  PrimaryIdentifier(
                    "o"
                  )
                ),
                null,
                "m1",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R1"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS (Test)o\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL (Test)o\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m2",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R3"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m2()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m2()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              IntegerLiteral(
                "0"
              ),
              "==",
              SelectionExpression(
                PrimaryIdentifier(
                  "t"
                ),
                "count"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS Test.<init>()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL Test.<init>()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            LogicalAndExpression(
              EqualityExpression(
                IntegerLiteral(
                  "0"
                ),
                "==",
                SelectionExpression(
                  PrimaryIdentifier(
                    "r"
                  ),
                  "round"
                )
              ),
              EqualityExpression(
                IntegerLiteral(
                  "0"
                ),
                "==",
                SelectionExpression(
                  PrimaryIdentifier(
                    "r"
                  ),
                  "count"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS Rest.<init>()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL Rest.<init>()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            CallExpression(
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m3",
                Arguments()
              ),
              null,
              "m4",
              Arguments()
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              IntegerLiteral(
                "2"
              ),
              "==",
              SelectionExpression(
                PrimaryIdentifier(
                  "t"
                ),
                "count"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m3().m4()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m3().m4()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            CallExpression(
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m3",
                Arguments()
              ),
              null,
              "m4",
              Arguments()
            )
          ),
          ConditionalStatement(
            LogicalAndExpression(
              EqualityExpression(
                IntegerLiteral(
                  "1"
                ),
                "==",
                SelectionExpression(
                  PrimaryIdentifier(
                    "r"
                  ),
                  "round"
                )
              ),
              EqualityExpression(
                IntegerLiteral(
                  "1"
                ),
                "==",
                SelectionExpression(
                  PrimaryIdentifier(
                    "r"
                  ),
                  "count"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m3().m4()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m3().m4()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                PrimaryIdentifier(
                  "t"
                ),
                "count"
              ),
              "=",
              IntegerLiteral(
                "0"
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              CallExpression(
                CallExpression(
                  PrimaryIdentifier(
                    "t"
                  ),
                  null,
                  "m5",
                  Arguments(
                    PrimaryIdentifier(
                      "t"
                    )
                  )
                ),
                null,
                "m3",
                Arguments()
              ),
              null,
              "m4",
              Arguments()
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              IntegerLiteral(
                "4"
              ),
              "==",
              SelectionExpression(
                PrimaryIdentifier(
                  "t"
                ),
                "count"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m5(t).m3().m4()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m5(t).m3().m4()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                PrimaryIdentifier(
                  "r"
                ),
                "count"
              ),
              "=",
              IntegerLiteral(
                "0"
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                PrimaryIdentifier(
                  "r"
                ),
                "round"
              ),
              "=",
              IntegerLiteral(
                "0"
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              CallExpression(
                CallExpression(
                  PrimaryIdentifier(
                    "r"
                  ),
                  null,
                  "m5",
                  Arguments(
                    PrimaryIdentifier(
                      "r"
                    )
                  )
                ),
                null,
                "m3",
                Arguments()
              ),
              null,
              "m4",
              Arguments()
            )
          ),
          ConditionalStatement(
            LogicalAndExpression(
              EqualityExpression(
                IntegerLiteral(
                  "2"
                ),
                "==",
                SelectionExpression(
                  PrimaryIdentifier(
                    "r"
                  ),
                  "round"
                )
              ),
              EqualityExpression(
                IntegerLiteral(
                  "2"
                ),
                "==",
                SelectionExpression(
                  PrimaryIdentifier(
                    "r"
                  ),
                  "count"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m5(r).m3().m4()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m5(r).m3().m4()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                PrimaryIdentifier(
                  "t"
                ),
                "count"
              ),
              "=",
              IntegerLiteral(
                "0"
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                PrimaryIdentifier(
                  "r"
                ),
                "count"
              ),
              "=",
              IntegerLiteral(
                "0"
              )
            )
          ),
          ExpressionStatement(
            Expression(
              SelectionExpression(
                PrimaryIdentifier(
                  "r"
                ),
                "round"
              ),
              "=",
              IntegerLiteral(
                "0"
              )
            )
          ),
          ExpressionStatement(
            CallExpression(
              CallExpression(
                CallExpression(
                  PrimaryIdentifier(
                    "r"
                  ),
                  null,
                  "m5",
                  Arguments(
                    PrimaryIdentifier(
                      "t"
                    )
                  )
                ),
                null,
                "m3",
                Arguments()
              ),
              null,
              "m4",
              Arguments()
            )
          ),
          ConditionalStatement(
            LogicalAndExpression(
              LogicalAndExpression(
                EqualityExpression(
                  IntegerLiteral(
                    "0"
                  ),
                  "==",
                  SelectionExpression(
                    PrimaryIdentifier(
                      "r"
                    ),
                    "round"
                  )
                ),
                EqualityExpression(
                  IntegerLiteral(
                    "0"
                  ),
                  "==",
                  SelectionExpression(
                    PrimaryIdentifier(
                      "r"
                    ),
                    "count"
                  )
                )
              ),
              EqualityExpression(
                IntegerLiteral(
                  "4"
                ),
                "==",
                SelectionExpression(
                  PrimaryIdentifier(
                    "t"
                  ),
                  "count"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m5(t).m3().m4()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m5(t).m3().m4()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m6",
                Arguments(
                  PrimaryIdentifier(
                    "t"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R1"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m6(t)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m6(t)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m6",
                Arguments(
                  PrimaryIdentifier(
                    "r"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R2"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m6(r)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m6(r)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m6",
                Arguments(
                  PrimaryIdentifier(
                    "t"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R1"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m6(t)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m6(t)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m6",
                Arguments(
                  PrimaryIdentifier(
                    "r"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R2"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m6(r)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m6(r)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m7",
                Arguments(
                  PrimaryIdentifier(
                    "t"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R1"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m7(t)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m7(t)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m7",
                Arguments(
                  PrimaryIdentifier(
                    "r"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R2"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m7(r)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m7(r)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m7",
                Arguments(
                  PrimaryIdentifier(
                    "o"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R3"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m7(o)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m7(o)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m7",
                Arguments(
                  PrimaryIdentifier(
                    "s1"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R4"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m7(s1)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m7(s1)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m7",
                Arguments(
                  PrimaryIdentifier(
                    "t"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R3"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m7(t)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m7(t)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m7",
                Arguments(
                  PrimaryIdentifier(
                    "r"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R2"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m7(r)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m7(r)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m8",
                Arguments(
                  PrimaryIdentifier(
                    "t"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R1"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m8(t)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m8(t)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "t"
                ),
                null,
                "m8",
                Arguments(
                  PrimaryIdentifier(
                    "r"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R2"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS t.m8(r)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL t.m8(r)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m8",
                Arguments(
                  PrimaryIdentifier(
                    "t"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R1"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m8(t)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m8(t)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m8",
                Arguments(
                  PrimaryIdentifier(
                    "r"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R2"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m8(r)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m8(r)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m8",
                Arguments(
                  PrimaryIdentifier(
                    "t"
                  ),
                  PrimaryIdentifier(
                    "t"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R3"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m8(t, t)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m8(t, t)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m8",
                Arguments(
                  PrimaryIdentifier(
                    "tr"
                  ),
                  PrimaryIdentifier(
                    "t"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R3"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m8(tr, t)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m8(tr, t)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m8",
                Arguments(
                  PrimaryIdentifier(
                    "r"
                  ),
                  PrimaryIdentifier(
                    "t"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R4"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m8(r, t)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m8(r, t)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m9",
                Arguments(
                  PrimaryIdentifier(
                    "n"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R1"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m9(n)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m9(n)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m9",
                Arguments(
                  AdditiveExpression(
                    PrimaryIdentifier(
                      "n"
                    ),
                    "+",
                    PrimaryIdentifier(
                      "n"
                    )
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R2"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m9(n+n)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m9(n+n)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m9",
                Arguments(
                  AdditiveExpression(
                    PrimaryIdentifier(
                      "n"
                    ),
                    "+",
                    IntegerLiteral(
                      "5l"
                    )
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R3"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m9(n+5l)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m9(n+5l)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m10",
                Arguments(
                  PrimaryIdentifier(
                    "n"
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R2"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m10(n)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m10(n)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "o"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "r"
                ),
                null,
                "m10",
                Arguments(
                  AdditiveExpression(
                    PrimaryIdentifier(
                      "n"
                    ),
                    "+",
                    PrimaryIdentifier(
                      "n"
                    )
                  )
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "R2"
              ),
              "==",
              PrimaryIdentifier(
                "o"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS r.m10(n+n)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL r.m10(n+n)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Class"
              ),
              null
            ),
            Declarators(
              Declarator(
                "k1",
                null,
                CallExpression(
                  PrimaryIdentifier(
                    "t"
                  ),
                  null,
                  "getClass",
                  Arguments()
                )
              )
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              QualifiedIdentifier(
                "Class"
              ),
              null
            ),
            Declarators(
              Declarator(
                "k2",
                null,
                CallExpression(
                  PrimaryIdentifier(
                    "r"
                  ),
                  null,
                  "getClass",
                  Arguments()
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "k1"
              ),
              "!=",
              PrimaryIdentifier(
                "k2"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS k1 != k2\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL K1 != k2\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            CallExpression(
              CallExpression(
                PrimaryIdentifier(
                  "k1"
                ),
                null,
                "getName",
                Arguments()
              ),
              null,
              "equals",
              Arguments(
                StringLiteral(
                  "\"xtc.oop.Test\""
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS k1.getName().equals(\\\"xtc.oop.Test\\\")\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL k1.getName().equals(\\\"xtc.oop.Test\\\")\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            CallExpression(
              StringLiteral(
                "\"xtc.oop.Test\""
              ),
              null,
              "equals",
              Arguments(
                CallExpression(
                  PrimaryIdentifier(
                    "k1"
                  ),
                  null,
                  "getName",
                  Arguments()
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS \\\"xtc.oop.Test\\\".equals(k1.getName())\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL \\\"xtc.oop.Test\\\".equals(k1.getName())\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            CallExpression(
              CallExpression(
                PrimaryIdentifier(
                  "k1"
                ),
                null,
                "toString",
                Arguments()
              ),
              null,
              "equals",
              Arguments(
                StringLiteral(
                  "\"class xtc.oop.Test\""
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS k1.toString().equals(\\\"class xtc.oop.Test\\\")\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL k1.toString().equals(\\\"class xtc.oop.Test\\\")\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            LogicalNegationExpression(
              CallExpression(
                PrimaryIdentifier(
                  "k1"
                ),
                null,
                "equals",
                Arguments(
                  PrimaryIdentifier(
                    "k2"
                  )
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS ! k1.equals(k2)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL ! k1.equals(k2)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "k2"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "k2"
                ),
                null,
                "getSuperclass",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "k1"
              ),
              "==",
              PrimaryIdentifier(
                "k2"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS k1 == k2.super()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL K1 == k2.super()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "k1"
              ),
              null,
              "equals",
              Arguments(
                PrimaryIdentifier(
                  "k2"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS k1.equals(k2.super())\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL k1.equals(k2.super())\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "k1"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "k1"
                ),
                null,
                "getSuperclass",
                Arguments()
              )
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "k2"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "k2"
                ),
                null,
                "getSuperclass",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              PrimaryIdentifier(
                "k1"
              ),
              "==",
              PrimaryIdentifier(
                "k2"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS k1.super() == k2.super().super()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL K1.super() == k2.super().super()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "k1"
              ),
              null,
              "equals",
              Arguments(
                PrimaryIdentifier(
                  "k2"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS k1.super().equals(k2.super().super())\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL k1.super().equals(k2.super().super())\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "k1"
              ),
              "=",
              CallExpression(
                PrimaryIdentifier(
                  "k1"
                ),
                null,
                "getSuperclass",
                Arguments()
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              NullLiteral(),
              "==",
              PrimaryIdentifier(
                "k1"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS null == k1.super().super()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL null == k1.super().super()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "s1"
              ),
              "=",
              StringLiteral(
                "\"Hello Kitty #1\""
              )
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "s2"
              ),
              "=",
              StringLiteral(
                "\"Hello Kitty #1\""
              )
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "s1"
              ),
              null,
              "equals",
              Arguments(
                PrimaryIdentifier(
                  "s2"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS s1.equals(String)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL s1.equals(String)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "s2"
              ),
              "=",
              AdditiveExpression(
                StringLiteral(
                  "\"Hel\""
                ),
                "+",
                StringLiteral(
                  "\"lo Kitty #1\""
                )
              )
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "s1"
              ),
              null,
              "equals",
              Arguments(
                PrimaryIdentifier(
                  "s2"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS s1.equals(String + String)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL s1.equals(String + String)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "s2"
              ),
              "=",
              AdditiveExpression(
                AdditiveExpression(
                  StringLiteral(
                    "\"He\""
                  ),
                  "+",
                  StringLiteral(
                    "\"ll\""
                  )
                ),
                "+",
                StringLiteral(
                  "\"o Kitty #1\""
                )
              )
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "s1"
              ),
              null,
              "equals",
              Arguments(
                PrimaryIdentifier(
                  "s2"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS s1.equals(String + String + String)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL s1.equals(String + String + String)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "s2"
              ),
              "=",
              AdditiveExpression(
                StringLiteral(
                  "\"Hello Kitty #\""
                ),
                "+",
                IntegerLiteral(
                  "1"
                )
              )
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "s1"
              ),
              null,
              "equals",
              Arguments(
                PrimaryIdentifier(
                  "s2"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS s1.equals(String + int)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL s1.equals(String + int)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "s2"
              ),
              "=",
              AdditiveExpression(
                StringLiteral(
                  "\"Hello Kitty #\""
                ),
                "+",
                CharacterLiteral(
                  "\'1\'"
                )
              )
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "s1"
              ),
              null,
              "equals",
              Arguments(
                PrimaryIdentifier(
                  "s2"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS s1.equals(String + char)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL s1.equals(String + char)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "s2"
              ),
              "=",
              AdditiveExpression(
                BasicCastExpression(
                  PrimitiveType(
                    "char"
                  ),
                  null,
                  IntegerLiteral(
                    "72"
                  )
                ),
                "+",
                StringLiteral(
                  "\"ello Kitty #1\""
                )
              )
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "s1"
              ),
              null,
              "equals",
              Arguments(
                PrimaryIdentifier(
                  "s2"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS s1.equals(char + String)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL s1.equals(char + String)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "char"
              ),
              null
            ),
            Declarators(
              Declarator(
                "c",
                null,
                IntegerLiteral(
                  "72"
                )
              )
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "s2"
              ),
              "=",
              AdditiveExpression(
                PrimaryIdentifier(
                  "c"
                ),
                "+",
                StringLiteral(
                  "\"ello Kitty #1\""
                )
              )
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "s1"
              ),
              null,
              "equals",
              Arguments(
                PrimaryIdentifier(
                  "s2"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS s1.equals(char + String)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL s1.equals(char + String)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              PrimaryIdentifier(
                "s2"
              ),
              "=",
              AdditiveExpression(
                CharacterLiteral(
                  "\'H\'"
                ),
                "+",
                StringLiteral(
                  "\"ello Kitty #1\""
                )
              )
            )
          ),
          ConditionalStatement(
            CallExpression(
              PrimaryIdentifier(
                "s1"
              ),
              null,
              "equals",
              Arguments(
                PrimaryIdentifier(
                  "s2"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS s1.equals(char + String)\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL s1.equals(char + String)\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "short"
              ),
              Dimensions(
                "["
              )
            ),
            Declarators(
              Declarator(
                "a0",
                null,
                NewArrayExpression(
                  PrimitiveType(
                    "short"
                  ),
                  ConcreteDimensions(
                    IntegerLiteral(
                      "0"
                    )
                  ),
                  null,
                  null
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "a0"
                ),
                "length"
              ),
              "==",
              IntegerLiteral(
                "0"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS short[0].length\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL short[0].length\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "short"
              ),
              Dimensions(
                "["
              )
            ),
            Declarators(
              Declarator(
                "a1",
                null,
                NewArrayExpression(
                  PrimitiveType(
                    "short"
                  ),
                  ConcreteDimensions(
                    IntegerLiteral(
                      "1"
                    )
                  ),
                  null,
                  null
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "a1"
                ),
                "length"
              ),
              "==",
              IntegerLiteral(
                "1"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS short[1].length\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL short[1].length\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          FieldDeclaration(
            Modifiers(),
            Type(
              PrimitiveType(
                "short"
              ),
              null
            ),
            Declarators(
              Declarator(
                "a2",
                Dimensions(
                  "["
                ),
                NewArrayExpression(
                  PrimitiveType(
                    "short"
                  ),
                  ConcreteDimensions(
                    IntegerLiteral(
                      "2"
                    )
                  ),
                  null,
                  null
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "a2"
                ),
                "length"
              ),
              "==",
              IntegerLiteral(
                "2"
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS short[2].length\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL short[2].length\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            LogicalAndExpression(
              LogicalAndExpression(
                EqualityExpression(
                  SubscriptExpression(
                    PrimaryIdentifier(
                      "a1"
                    ),
                    IntegerLiteral(
                      "0"
                    )
                  ),
                  "==",
                  IntegerLiteral(
                    "0"
                  )
                ),
                EqualityExpression(
                  SubscriptExpression(
                    PrimaryIdentifier(
                      "a2"
                    ),
                    IntegerLiteral(
                      "0"
                    )
                  ),
                  "==",
                  IntegerLiteral(
                    "0"
                  )
                )
              ),
              EqualityExpression(
                SubscriptExpression(
                  PrimaryIdentifier(
                    "a2"
                  ),
                  IntegerLiteral(
                    "1"
                  )
                ),
                "==",
                IntegerLiteral(
                  "0"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS short[i] == 0\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL short[i] == 0\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            Expression(
              SubscriptExpression(
                PrimaryIdentifier(
                  "a1"
                ),
                IntegerLiteral(
                  "0"
                )
              ),
              "=",
              BasicCastExpression(
                PrimitiveType(
                  "short"
                ),
                null,
                IntegerLiteral(
                  "32768"
                )
              )
            )
          ),
          ConditionalStatement(
            EqualityExpression(
              SubscriptExpression(
                PrimaryIdentifier(
                  "a1"
                ),
                IntegerLiteral(
                  "0"
                )
              ),
              "==",
              UnaryExpression(
                "-",
                IntegerLiteral(
                  "32768"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS short[0] = (short)32768\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL short[0] = (short)32768\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ConditionalStatement(
            CallExpression(
              CallExpression(
                CallExpression(
                  PrimaryIdentifier(
                    "a0"
                  ),
                  null,
                  "getClass",
                  Arguments()
                ),
                null,
                "getName",
                Arguments()
              ),
              null,
              "equals",
              Arguments(
                StringLiteral(
                  "\"[S\""
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"PASS short[0].getClass().getName()\""
                    )
                  )
                )
              ),
              ExpressionStatement(
                PostfixExpression(
                  PrimaryIdentifier(
                    "success"
                  ),
                  "++"
                )
              )
            ),
            Block(
              ExpressionStatement(
                CallExpression(
                  SelectionExpression(
                    PrimaryIdentifier(
                      "System"
                    ),
                    "out"
                  ),
                  null,
                  "println",
                  Arguments(
                    StringLiteral(
                      "\"FAIL short[0].getClass().getName()\""
                    )
                  )
                )
              )
            )
          ),
          ExpressionStatement(
            PostfixExpression(
              PrimaryIdentifier(
                "test"
              ),
              "++"
            )
          ),
          ExpressionStatement(
            CallExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "System"
                ),
                "out"
              ),
              null,
              "println",
              Arguments()
            )
          ),
          ExpressionStatement(
            CallExpression(
              SelectionExpression(
                PrimaryIdentifier(
                  "System"
                ),
                "out"
              ),
              null,
              "println",
              Arguments(
                AdditiveExpression(
                  AdditiveExpression(
                    AdditiveExpression(
                      PrimaryIdentifier(
                        "success"
                      ),
                      "+",
                      StringLiteral(
                        "\" out of \""
                      )
                    ),
                    "+",
                    PrimaryIdentifier(
                      "test"
                    )
                  ),
                  "+",
                  StringLiteral(
                    "\" tests have passed.\""
                  )
                )
              )
            )
          )
        )
      )
    )
  )
)

